#!/usr/bin/env node

var sys = require('sys')
var exec = require('child_process').exec;

var args = process.argv.slice(2);

if (args.length == 0) {
	console.log("\nCommands:\n    build,\n    rebuild,\n    clean,\n    run,\n    rebuild-and-run,\n    run-without-web-server\n");
	process.exit(0);
}

function build (callback) {
		console.log("    Building...");
        function puts(error, stdout, stderr) {
                sys.puts(stdout);
				if (error) {
					console.error(error);
				}
				else {
					console.log("    Success!");
					if (callback) {
						callback();
					}
				}
        }
        exec("./buildlib.sh", puts);
}

function run (callback) {
	console.log("    Starting Watchify.");
    exec("./build.sh", function (error, stdout, stderr) {
            sys.puts(stdout);
	});
	if (callback) {
		setTimeout(callback, 5000);
	}
}

function runWebServer () {
	console.log("    Starting SimpleHTTPServer");
    exec("python -m SimpleHTTPServer", function (error, stdout, stderr) {
            sys.puts(stdout);
	});
}

function clean (callback) {
	var count = 3;
        function puts(error, stdout, stderr) {
			if (!--count) {
				if (callback) {
					callback();
				}
			}
        }
		console.log("    Removing libs.js");
        exec("rm libs.js", puts);
		console.log("    Removing pw.js");
		exec("rm pw.js", puts);
		console.log("    Removing app.js");
		exec("rm pw.js", puts);
		
}


if (args[0] == "rebuild") {
	clean(build);
}
if (args[0] == "build") {
	build();
}

if (args[0] == "clean") {
	clean();
}

if (args[0] == "run") {
	run();
	runWebServer();
	console.log("    To terminate this proccess ctrl-c it.");
}

if (args[0] == "rebuild-and-run") {
	clean(function () {
		build(function () {
			run(function () {
				runWebServer();
				console.log("    To terminate this proccess ctrl-c it.");
			});
		})
	});
}

if (args[0] == "run-without-web-server") {
	run();
	console.log("    To terminate this proccess ctrl-c it.");
}